<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>true</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_attme_microwaves_scni_request</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_attme_microwaves_scni_request">active=true^EQ<item endquery="false" field="active" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>CNI warn duplicated request</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	//La presente display business rule sirve para buscar si existe otras solicitudes CNI activas para el mismo enlace, si es así se guarda en el objeto scratchpad para que sea notificado por medio de un mensaje en el client script con el mismo nombre "CNI warn duplicated request"
		
	var cni_duplicated = new GlideRecord('x_attme_microwaves_scni_request');
	cni_duplicated.addActiveQuery();
	cni_duplicated.addQuery('point_a', current.point_a);
	cni_duplicated.addQuery('point_b', current.point_b);
	cni_duplicated.addQuery('sys_id', '!=' , current.sys_id);
	cni_duplicated.query();
	
	//dado que pueden ser varias las solicitudes duplicadas se guarda el número de solicitudes encontradas
	
	g_scratchpad.number_duplicated_requests = cni_duplicated.getRowCount();
	
	if(g_scratchpad.number_duplicated_requests > 0)
	{
		var string = "https://attmxdev.service-now.com/x_attme_microwaves_scni_request_list.do?sysparm_query=active%3Dtrue%5Epoint_a%3D" + current.point_a + "%5Epoint_b%3D" + current.point_b + "%5Enumber!%3D" + current.number;
		
		g_scratchpad.url_duplicated_requests = string;
	}
		
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>hugo.ruano</sys_created_by>
        <sys_created_on>2017-11-28 05:22:34</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>480d4a04db760f00e7bbdbbb5e961956</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>CNI warn duplicated request</sys_name>
        <sys_overrides/>
        <sys_package display_value="Microwaves" source="x_attme_microwaves">85466334db7ff20028f3d5ab5e9619a2</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Microwaves">85466334db7ff20028f3d5ab5e9619a2</sys_scope>
        <sys_update_name>sys_script_480d4a04db760f00e7bbdbbb5e961956</sys_update_name>
        <sys_updated_by>hugo.ruano</sys_updated_by>
        <sys_updated_on>2017-11-28 05:27:49</sys_updated_on>
        <template/>
        <when>before_display</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=480d4a04db760f00e7bbdbbb5e961956"/>
</record_update>
