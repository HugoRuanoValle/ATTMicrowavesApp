<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_attme_microwaves.getDatacomRequestFromNMSRequest</api_name>
        <client_callable>true</client_callable>
        <description>El presente script include es ocupado por la UI action "Create Port Datacom request"</description>
        <name>getDatacomRequestFromNMSRequest</name>
        <script><![CDATA[var getDatacomRequestFromNMSRequest = Class.create();
getDatacomRequestFromNMSRequest.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	
	getDatacomRequest: function() {
		
		var datacom_request_table = 'x_attme_datacom_datacom_request';
	    var datacom_port_assignment_table = 'x_attme_datacom_port_assignment';
		var proposed_datacom_request_sysid = '';
	    var proposed_datacom_request_number;
	    var proposed_datacom_request_opened_by;
		var proposed_datacom_request_required_date;
		var proposed_datacom_request_project_name;
		var proposed_datacom_request_project_scope;
		var proposed_datacom_request_purpose;
		var proposed_datacom_request_requirement;
		
	    var proposed_datacom_port_assignment_location;
		
		var nms_aggregator = this.getParameter('sysparm_nms_aggregator');
		var logged_user = this.getParameter('sysparm_logged_user');
		
		var datacom_port_assignment = new GlideRecord(datacom_port_assignment_table);
		datacom_port_assignment.addQuery('location', nms_aggregator);
		datacom_port_assignment.orderByDesc('sys_created_on'); 
		datacom_port_assignment.query();
		
		//buscamos el sys_id del departamento del usuario
		var user = new GlideRecord('sys_user');
		user.get(logged_user);
		var microwaves_department = user.department;		
		
		//posiblemente encontremos varios "port assignment" para el mismo agregador, se evaluan todas
		while(datacom_port_assignment.next())
		{
			//evalumamos la solicitud de datacom relacionada con el port assignment
			var datacom_request = new GlideRecord(datacom_request_table);
			datacom_request.addQuery('sys_id', datacom_port_assignment.datacom_request);
			datacom_request.query();
			
			if(datacom_request.next())
			{
				//si la solicitud de datacom se encuentra activa
				if(datacom_request.active == true)
				{
					//si la solicitud ademÃ¡s es de un usuario del departamento de microondas
					if(datacom_request.opened_by.department == microwaves_department)
					{
						//guardamos el sys_id de la datacom request encontrada
						proposed_datacom_request_sysid = datacom_request.sys_id;
						proposed_datacom_request_number = datacom_request.number;
						proposed_datacom_request_opened_by = datacom_request.opened_by.name;
						proposed_datacom_request_required_date = datacom_request.required_date;
						proposed_datacom_request_project_name = datacom_request.project_name.project_name;
		                proposed_datacom_request_project_scope = datacom_request.project_scope;
		                proposed_datacom_request_purpose = datacom_request.purpose;
		                proposed_datacom_request_requirement = datacom_request.requirement;
						proposed_datacom_port_assignment_location = datacom_port_assignment.location.u_site_id +" ("+ datacom_port_assignment.location.name + ")";
						
					}
				}
			}
			
			if(proposed_datacom_request_sysid != '')
			{
				//brincamos el ciclo while
				break;
			}
			
		}
		
		//formamos el ITEM del XML		
		var result = this.newItem("result");
		result.setAttribute("proposed_datacom_request_sysid", proposed_datacom_request_sysid);
		result.setAttribute("proposed_datacom_request_opened_by", proposed_datacom_request_opened_by);
		result.setAttribute("proposed_datacom_request_required_date", proposed_datacom_request_required_date);
		result.setAttribute("proposed_datacom_request_number", proposed_datacom_request_number);
		result.setAttribute("proposed_datacom_request_project_name", proposed_datacom_request_project_name);
	    result.setAttribute("proposed_datacom_request_project_scope", proposed_datacom_request_project_scope);
		result.setAttribute("proposed_datacom_request_purpose", proposed_datacom_request_purpose);
	    result.setAttribute("proposed_datacom_request_requirement", proposed_datacom_request_requirement);
		result.setAttribute("proposed_datacom_port_assignment_location", proposed_datacom_port_assignment_location);
	},
	
		
    type: 'getDatacomRequestFromNMSRequest'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>hugo.ruano</sys_created_by>
        <sys_created_on>2017-09-08 00:30:20</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>031140cadbc1430028f3d5ab5e9619c5</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>getDatacomRequestFromNMSRequest</sys_name>
        <sys_package display_value="Microwaves" source="x_attme_microwaves">85466334db7ff20028f3d5ab5e9619a2</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Microwaves">85466334db7ff20028f3d5ab5e9619a2</sys_scope>
        <sys_update_name>sys_script_include_031140cadbc1430028f3d5ab5e9619c5</sys_update_name>
        <sys_updated_by>hugo.ruano</sys_updated_by>
        <sys_updated_on>2017-09-08 20:14:26</sys_updated_on>
    </sys_script_include>
</record_update>
